---
version: 2.1

executors:
  node_executor:
    docker:
      - image: circleci/node:12.9.0-stretch
jobs:
  test:
    executor: node_executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-cache-{{ checksum "package-lock.json" }}
            - node-cache-
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          paths:
            - ~/.npm
          key: node-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Unit tests
          command: npm run test:coverage
  build:
    executor: node_executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-cache-{{ checksum "package-lock.json" }}
            - node-cache-
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          paths:
            - ~/.npm
          key: node-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Build
          command: npm run build
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./lib
  check:
    executor: node_executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-cache-{{ checksum "package-lock.json" }}
            - node-cache-
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          paths:
            - ~/.npm
          key: node-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Check lints
          command: npm run lint
      - run:
          name: Check formatting
          command: npm run check-formatting
  publish:
    executor: node_executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-cache-{{ checksum "package-lock.json" }}
            - node-cache-
      - attach_workspace:
          at: ~/project
      - publish:
          name: Publish on npm
          command: |
            echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}'>.npmrc
            npm publish --access public

workflows:
  version: 2
  default:
    jobs:
      - build
      - test:
          requires:
            - build
      - check:
          requires:
            - build
      # - wait-for-approval: # Runs for tags only
      #     type: approval
      #     requires:
      #       - test
      #       - check
      #       - build
      #     filters:
      #       tags:
      #         only: /^v.*/
      #       branches:
      #         ignore: /.*/
      # - publish: # Runs for tags only
      #     requires:
      #       - wait-for-approval
      #     filters:
      #       tags:
      #         only: /^v.*/
      #       branches:
      #         ignore: /.*/
