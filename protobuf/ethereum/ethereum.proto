syntax = "proto3";

package context.manager;

option go_package = "gitlab.com/ConsenSys/client/fr/core-stack/core.git/protobuf/ethereum";

// Transaction data
message TxData {
    uint64 nonce = 1; // QUANTITY - Integer of a nonce.
    string to = 2; // DATA (20 Bytes) - The address of the receiver. null when itâ€™s a contract creation transaction.
    string value = 3; // QUANTITY - Integer of the value sent with this transaction.
    uint64 gas = 4; // QUANTITY - Integer of the gas provided for the transaction execution. 
    string gasPrice = 5; // QUANTITY - Integer of the gas price used for each paid gas.
    string data = 6; // DATA (4 bytes) - Hash of the method signature followed by encoded parameters.
}

// Transaction
message Transaction {
    TxData txData = 1;

    string raw = 2; // DATA - The signed, RLP encoded transaction.
    string hash = 3; // DATA (32 Bytes) - Hash of the transaction.
}

// Ethereum Log
message Log {
    string address = 1; // DATA (20 Bytes) - Address from which log originated.
    repeated string topics = 2; // Array of DATA (32 Bytes) - Array of 0 to 4 indexed log arguments 
    string data = 3; // DATA - Non-indexed arguments of the log. 
    map<string, string> decodedData = 4;

    uint64 blockNumber = 5; // QUANTITY - Block number where this transaction was in.
    string txHash = 6; // DATA (32 Bytes) - Hash of the transaction.
    uint64 txIndex = 7; // QUANTITY - Integer of the transactions index position in the block.
     
    string blockHash = 8; // DATA (32 Bytes) - Hash of the block where this transaction was in.
    uint64 index = 9; // QUANTITY - Integer of the log index position in the block.

    bool removed = 10; // Removed field is true if this log was reverted due to a chain reorganisation.
}
 
// Transaction Receipt
message Receipt {
    string txHash = 1; // DATA (32 Bytes) - Hash of the transaction. TODO: maybe not necessary
    string blockHash = 2; // DATA (32 Bytes) - Hash of the block where this transaction was in.
    uint64 blockNumber = 3; // QUANTITY - Block number where this transaction was in.
    uint64 TxIndex = 4; // QUANTITY - Integer of the transactions index position in the block.
    
    string contractAddress = 6; // DATA (20 Bytes) - The contract address created, if the transaction was a contract creation
    
    string postState = 7; // DATA (32 Bytes) - State root hash after executing transaction
    uint64 status = 8; // QUANTITY - 0x0 indicates transaction failure , 0x1 indicates transaction success.

    string bloom = 10; // DATA (256 Bytes) - Bloom filter of logs/events generated by contracts during transaction execution.
    repeated Log logs = 11; // Array - Array of log objects, which this transaction generated.

    uint64 gasUsed = 12; // QUANTITY - The amount of gas used by this specific transaction alone.
    uint64 cumulativeGasUsed = 13; // QUANTITY - The total amount of gas used when this transaction was executed in the block.
}
 