/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var types_common_account_pb = require('../../types/common/account_pb.js');
goog.object.extend(proto, types_common_account_pb);
var types_common_call_pb = require('../../types/common/call_pb.js');
goog.object.extend(proto, types_common_call_pb);
var types_common_chain_pb = require('../../types/common/chain_pb.js');
goog.object.extend(proto, types_common_chain_pb);
var types_common_error_pb = require('../../types/common/error_pb.js');
goog.object.extend(proto, types_common_error_pb);
var types_ethereum_transaction_pb = require('../../types/ethereum/transaction_pb.js');
goog.object.extend(proto, types_ethereum_transaction_pb);
var types_ethereum_receipt_pb = require('../../types/ethereum/receipt_pb.js');
goog.object.extend(proto, types_ethereum_receipt_pb);
goog.exportSymbol('proto.envelope.Envelope', null, global);
goog.exportSymbol('proto.envelope.Metadata', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envelope.Metadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envelope.Metadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envelope.Metadata.displayName = 'proto.envelope.Metadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envelope.Envelope = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envelope.Envelope.repeatedFields_, null);
};
goog.inherits(proto.envelope.Envelope, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envelope.Envelope.displayName = 'proto.envelope.Envelope';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envelope.Metadata.prototype.toObject = function(opt_includeInstance) {
  return proto.envelope.Metadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envelope.Metadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envelope.Metadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    extraMap: (f = msg.getExtraMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envelope.Metadata}
 */
proto.envelope.Metadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envelope.Metadata;
  return proto.envelope.Metadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envelope.Metadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envelope.Metadata}
 */
proto.envelope.Metadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = msg.getExtraMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envelope.Metadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envelope.Metadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envelope.Metadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envelope.Metadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExtraMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.envelope.Metadata.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.envelope.Metadata.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> extra = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.envelope.Metadata.prototype.getExtraMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.envelope.Metadata.prototype.clearExtraMap = function() {
  this.getExtraMap().clear();
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envelope.Envelope.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envelope.Envelope.prototype.toObject = function(opt_includeInstance) {
  return proto.envelope.Envelope.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envelope.Envelope} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envelope.Envelope.toObject = function(includeInstance, msg) {
  var f, obj = {
    chain: (f = msg.getChain()) && types_common_chain_pb.Chain.toObject(includeInstance, f),
    sender: (f = msg.getSender()) && types_common_account_pb.Account.toObject(includeInstance, f),
    receiver: (f = msg.getReceiver()) && types_common_account_pb.Account.toObject(includeInstance, f),
    call: (f = msg.getCall()) && types_common_call_pb.Call.toObject(includeInstance, f),
    tx: (f = msg.getTx()) && types_ethereum_transaction_pb.Transaction.toObject(includeInstance, f),
    receipt: (f = msg.getReceipt()) && types_ethereum_receipt_pb.Receipt.toObject(includeInstance, f),
    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),
    types_common_error_pb.Error.toObject, includeInstance),
    metadata: (f = msg.getMetadata()) && proto.envelope.Metadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envelope.Envelope}
 */
proto.envelope.Envelope.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envelope.Envelope;
  return proto.envelope.Envelope.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envelope.Envelope} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envelope.Envelope}
 */
proto.envelope.Envelope.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_common_chain_pb.Chain;
      reader.readMessage(value,types_common_chain_pb.Chain.deserializeBinaryFromReader);
      msg.setChain(value);
      break;
    case 2:
      var value = new types_common_account_pb.Account;
      reader.readMessage(value,types_common_account_pb.Account.deserializeBinaryFromReader);
      msg.setSender(value);
      break;
    case 3:
      var value = new types_common_account_pb.Account;
      reader.readMessage(value,types_common_account_pb.Account.deserializeBinaryFromReader);
      msg.setReceiver(value);
      break;
    case 4:
      var value = new types_common_call_pb.Call;
      reader.readMessage(value,types_common_call_pb.Call.deserializeBinaryFromReader);
      msg.setCall(value);
      break;
    case 5:
      var value = new types_ethereum_transaction_pb.Transaction;
      reader.readMessage(value,types_ethereum_transaction_pb.Transaction.deserializeBinaryFromReader);
      msg.setTx(value);
      break;
    case 6:
      var value = new types_ethereum_receipt_pb.Receipt;
      reader.readMessage(value,types_ethereum_receipt_pb.Receipt.deserializeBinaryFromReader);
      msg.setReceipt(value);
      break;
    case 7:
      var value = new types_common_error_pb.Error;
      reader.readMessage(value,types_common_error_pb.Error.deserializeBinaryFromReader);
      msg.addErrors(value);
      break;
    case 8:
      var value = new proto.envelope.Metadata;
      reader.readMessage(value,proto.envelope.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envelope.Envelope.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envelope.Envelope.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envelope.Envelope} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envelope.Envelope.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChain();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_common_chain_pb.Chain.serializeBinaryToWriter
    );
  }
  f = message.getSender();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      types_common_account_pb.Account.serializeBinaryToWriter
    );
  }
  f = message.getReceiver();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      types_common_account_pb.Account.serializeBinaryToWriter
    );
  }
  f = message.getCall();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      types_common_call_pb.Call.serializeBinaryToWriter
    );
  }
  f = message.getTx();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      types_ethereum_transaction_pb.Transaction.serializeBinaryToWriter
    );
  }
  f = message.getReceipt();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      types_ethereum_receipt_pb.Receipt.serializeBinaryToWriter
    );
  }
  f = message.getErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      types_common_error_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.envelope.Metadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.Chain chain = 1;
 * @return {?proto.common.Chain}
 */
proto.envelope.Envelope.prototype.getChain = function() {
  return /** @type{?proto.common.Chain} */ (
    jspb.Message.getWrapperField(this, types_common_chain_pb.Chain, 1));
};


/** @param {?proto.common.Chain|undefined} value */
proto.envelope.Envelope.prototype.setChain = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envelope.Envelope.prototype.clearChain = function() {
  this.setChain(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envelope.Envelope.prototype.hasChain = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.Account sender = 2;
 * @return {?proto.common.Account}
 */
proto.envelope.Envelope.prototype.getSender = function() {
  return /** @type{?proto.common.Account} */ (
    jspb.Message.getWrapperField(this, types_common_account_pb.Account, 2));
};


/** @param {?proto.common.Account|undefined} value */
proto.envelope.Envelope.prototype.setSender = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envelope.Envelope.prototype.clearSender = function() {
  this.setSender(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envelope.Envelope.prototype.hasSender = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.Account receiver = 3;
 * @return {?proto.common.Account}
 */
proto.envelope.Envelope.prototype.getReceiver = function() {
  return /** @type{?proto.common.Account} */ (
    jspb.Message.getWrapperField(this, types_common_account_pb.Account, 3));
};


/** @param {?proto.common.Account|undefined} value */
proto.envelope.Envelope.prototype.setReceiver = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envelope.Envelope.prototype.clearReceiver = function() {
  this.setReceiver(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envelope.Envelope.prototype.hasReceiver = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.Call call = 4;
 * @return {?proto.common.Call}
 */
proto.envelope.Envelope.prototype.getCall = function() {
  return /** @type{?proto.common.Call} */ (
    jspb.Message.getWrapperField(this, types_common_call_pb.Call, 4));
};


/** @param {?proto.common.Call|undefined} value */
proto.envelope.Envelope.prototype.setCall = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envelope.Envelope.prototype.clearCall = function() {
  this.setCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envelope.Envelope.prototype.hasCall = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ethereum.Transaction tx = 5;
 * @return {?proto.ethereum.Transaction}
 */
proto.envelope.Envelope.prototype.getTx = function() {
  return /** @type{?proto.ethereum.Transaction} */ (
    jspb.Message.getWrapperField(this, types_ethereum_transaction_pb.Transaction, 5));
};


/** @param {?proto.ethereum.Transaction|undefined} value */
proto.envelope.Envelope.prototype.setTx = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envelope.Envelope.prototype.clearTx = function() {
  this.setTx(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envelope.Envelope.prototype.hasTx = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ethereum.Receipt receipt = 6;
 * @return {?proto.ethereum.Receipt}
 */
proto.envelope.Envelope.prototype.getReceipt = function() {
  return /** @type{?proto.ethereum.Receipt} */ (
    jspb.Message.getWrapperField(this, types_ethereum_receipt_pb.Receipt, 6));
};


/** @param {?proto.ethereum.Receipt|undefined} value */
proto.envelope.Envelope.prototype.setReceipt = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envelope.Envelope.prototype.clearReceipt = function() {
  this.setReceipt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envelope.Envelope.prototype.hasReceipt = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated common.Error errors = 7;
 * @return {!Array<!proto.common.Error>}
 */
proto.envelope.Envelope.prototype.getErrorsList = function() {
  return /** @type{!Array<!proto.common.Error>} */ (
    jspb.Message.getRepeatedWrapperField(this, types_common_error_pb.Error, 7));
};


/** @param {!Array<!proto.common.Error>} value */
proto.envelope.Envelope.prototype.setErrorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.common.Error=} opt_value
 * @param {number=} opt_index
 * @return {!proto.common.Error}
 */
proto.envelope.Envelope.prototype.addErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.common.Error, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.envelope.Envelope.prototype.clearErrorsList = function() {
  this.setErrorsList([]);
};


/**
 * optional Metadata metadata = 8;
 * @return {?proto.envelope.Metadata}
 */
proto.envelope.Envelope.prototype.getMetadata = function() {
  return /** @type{?proto.envelope.Metadata} */ (
    jspb.Message.getWrapperField(this, proto.envelope.Metadata, 8));
};


/** @param {?proto.envelope.Metadata|undefined} value */
proto.envelope.Envelope.prototype.setMetadata = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envelope.Envelope.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envelope.Envelope.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 8) != null;
};


goog.object.extend(exports, proto.envelope);
