// source: types/envelope-store/store.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var protoc$gen$swagger_options_annotations_pb = require('../../protoc-gen-swagger/options/annotations_pb.js');
goog.object.extend(proto, protoc$gen$swagger_options_annotations_pb);
var types_envelope_envelope_pb = require('../../types/envelope/envelope_pb.js');
goog.object.extend(proto, types_envelope_envelope_pb);
var types_ethereum_base_pb = require('../../types/ethereum/base_pb.js');
goog.object.extend(proto, types_ethereum_base_pb);
var types_chain_chain_pb = require('../../types/chain/chain_pb.js');
goog.object.extend(proto, types_chain_chain_pb);
goog.exportSymbol('proto.envelopestore.LoadByIDRequest', null, global);
goog.exportSymbol('proto.envelopestore.LoadByTxHashRequest', null, global);
goog.exportSymbol('proto.envelopestore.LoadPendingRequest', null, global);
goog.exportSymbol('proto.envelopestore.LoadPendingResponse', null, global);
goog.exportSymbol('proto.envelopestore.SetStatusRequest', null, global);
goog.exportSymbol('proto.envelopestore.Status', null, global);
goog.exportSymbol('proto.envelopestore.StatusInfo', null, global);
goog.exportSymbol('proto.envelopestore.StatusResponse', null, global);
goog.exportSymbol('proto.envelopestore.StoreRequest', null, global);
goog.exportSymbol('proto.envelopestore.StoreResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envelopestore.StatusInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envelopestore.StatusInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envelopestore.StatusInfo.displayName = 'proto.envelopestore.StatusInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envelopestore.StoreRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envelopestore.StoreRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envelopestore.StoreRequest.displayName = 'proto.envelopestore.StoreRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envelopestore.StoreResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envelopestore.StoreResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envelopestore.StoreResponse.displayName = 'proto.envelopestore.StoreResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envelopestore.LoadByIDRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envelopestore.LoadByIDRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envelopestore.LoadByIDRequest.displayName = 'proto.envelopestore.LoadByIDRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envelopestore.LoadByTxHashRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envelopestore.LoadByTxHashRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envelopestore.LoadByTxHashRequest.displayName = 'proto.envelopestore.LoadByTxHashRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envelopestore.SetStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envelopestore.SetStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envelopestore.SetStatusRequest.displayName = 'proto.envelopestore.SetStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envelopestore.StatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envelopestore.StatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envelopestore.StatusResponse.displayName = 'proto.envelopestore.StatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envelopestore.LoadPendingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envelopestore.LoadPendingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envelopestore.LoadPendingRequest.displayName = 'proto.envelopestore.LoadPendingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envelopestore.LoadPendingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envelopestore.LoadPendingResponse.repeatedFields_, null);
};
goog.inherits(proto.envelopestore.LoadPendingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envelopestore.LoadPendingResponse.displayName = 'proto.envelopestore.LoadPendingResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envelopestore.StatusInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.envelopestore.StatusInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envelopestore.StatusInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envelopestore.StatusInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    storedat: (f = msg.getStoredat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    sentat: (f = msg.getSentat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    minedat: (f = msg.getMinedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    errorat: (f = msg.getErrorat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envelopestore.StatusInfo}
 */
proto.envelopestore.StatusInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envelopestore.StatusInfo;
  return proto.envelopestore.StatusInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envelopestore.StatusInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envelopestore.StatusInfo}
 */
proto.envelopestore.StatusInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.envelopestore.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStoredat(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setSentat(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setMinedat(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setErrorat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envelopestore.StatusInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envelopestore.StatusInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envelopestore.StatusInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envelopestore.StatusInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getStoredat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getSentat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getMinedat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getErrorat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional Status status = 1;
 * @return {!proto.envelopestore.Status}
 */
proto.envelopestore.StatusInfo.prototype.getStatus = function() {
  return /** @type {!proto.envelopestore.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.envelopestore.Status} value
 * @return {!proto.envelopestore.StatusInfo} returns this
 */
proto.envelopestore.StatusInfo.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp storedAt = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.envelopestore.StatusInfo.prototype.getStoredat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.envelopestore.StatusInfo} returns this
*/
proto.envelopestore.StatusInfo.prototype.setStoredat = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envelopestore.StatusInfo} returns this
 */
proto.envelopestore.StatusInfo.prototype.clearStoredat = function() {
  return this.setStoredat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envelopestore.StatusInfo.prototype.hasStoredat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp sentAt = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.envelopestore.StatusInfo.prototype.getSentat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.envelopestore.StatusInfo} returns this
*/
proto.envelopestore.StatusInfo.prototype.setSentat = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envelopestore.StatusInfo} returns this
 */
proto.envelopestore.StatusInfo.prototype.clearSentat = function() {
  return this.setSentat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envelopestore.StatusInfo.prototype.hasSentat = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp minedAt = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.envelopestore.StatusInfo.prototype.getMinedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.envelopestore.StatusInfo} returns this
*/
proto.envelopestore.StatusInfo.prototype.setMinedat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envelopestore.StatusInfo} returns this
 */
proto.envelopestore.StatusInfo.prototype.clearMinedat = function() {
  return this.setMinedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envelopestore.StatusInfo.prototype.hasMinedat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp errorAt = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.envelopestore.StatusInfo.prototype.getErrorat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.envelopestore.StatusInfo} returns this
*/
proto.envelopestore.StatusInfo.prototype.setErrorat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envelopestore.StatusInfo} returns this
 */
proto.envelopestore.StatusInfo.prototype.clearErrorat = function() {
  return this.setErrorat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envelopestore.StatusInfo.prototype.hasErrorat = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envelopestore.StoreRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.envelopestore.StoreRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envelopestore.StoreRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envelopestore.StoreRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && types_envelope_envelope_pb.Envelope.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envelopestore.StoreRequest}
 */
proto.envelopestore.StoreRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envelopestore.StoreRequest;
  return proto.envelopestore.StoreRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envelopestore.StoreRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envelopestore.StoreRequest}
 */
proto.envelopestore.StoreRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_envelope_envelope_pb.Envelope;
      reader.readMessage(value,types_envelope_envelope_pb.Envelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envelopestore.StoreRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envelopestore.StoreRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envelopestore.StoreRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envelopestore.StoreRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_envelope_envelope_pb.Envelope.serializeBinaryToWriter
    );
  }
};


/**
 * optional envelope.Envelope envelope = 1;
 * @return {?proto.envelope.Envelope}
 */
proto.envelopestore.StoreRequest.prototype.getEnvelope = function() {
  return /** @type{?proto.envelope.Envelope} */ (
    jspb.Message.getWrapperField(this, types_envelope_envelope_pb.Envelope, 1));
};


/**
 * @param {?proto.envelope.Envelope|undefined} value
 * @return {!proto.envelopestore.StoreRequest} returns this
*/
proto.envelopestore.StoreRequest.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envelopestore.StoreRequest} returns this
 */
proto.envelopestore.StoreRequest.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envelopestore.StoreRequest.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envelopestore.StoreResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.envelopestore.StoreResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envelopestore.StoreResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envelopestore.StoreResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && types_envelope_envelope_pb.Envelope.toObject(includeInstance, f),
    statusInfo: (f = msg.getStatusInfo()) && proto.envelopestore.StatusInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envelopestore.StoreResponse}
 */
proto.envelopestore.StoreResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envelopestore.StoreResponse;
  return proto.envelopestore.StoreResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envelopestore.StoreResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envelopestore.StoreResponse}
 */
proto.envelopestore.StoreResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_envelope_envelope_pb.Envelope;
      reader.readMessage(value,types_envelope_envelope_pb.Envelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    case 2:
      var value = new proto.envelopestore.StatusInfo;
      reader.readMessage(value,proto.envelopestore.StatusInfo.deserializeBinaryFromReader);
      msg.setStatusInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envelopestore.StoreResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envelopestore.StoreResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envelopestore.StoreResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envelopestore.StoreResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_envelope_envelope_pb.Envelope.serializeBinaryToWriter
    );
  }
  f = message.getStatusInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envelopestore.StatusInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional envelope.Envelope envelope = 1;
 * @return {?proto.envelope.Envelope}
 */
proto.envelopestore.StoreResponse.prototype.getEnvelope = function() {
  return /** @type{?proto.envelope.Envelope} */ (
    jspb.Message.getWrapperField(this, types_envelope_envelope_pb.Envelope, 1));
};


/**
 * @param {?proto.envelope.Envelope|undefined} value
 * @return {!proto.envelopestore.StoreResponse} returns this
*/
proto.envelopestore.StoreResponse.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envelopestore.StoreResponse} returns this
 */
proto.envelopestore.StoreResponse.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envelopestore.StoreResponse.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional StatusInfo status_info = 2;
 * @return {?proto.envelopestore.StatusInfo}
 */
proto.envelopestore.StoreResponse.prototype.getStatusInfo = function() {
  return /** @type{?proto.envelopestore.StatusInfo} */ (
    jspb.Message.getWrapperField(this, proto.envelopestore.StatusInfo, 2));
};


/**
 * @param {?proto.envelopestore.StatusInfo|undefined} value
 * @return {!proto.envelopestore.StoreResponse} returns this
*/
proto.envelopestore.StoreResponse.prototype.setStatusInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envelopestore.StoreResponse} returns this
 */
proto.envelopestore.StoreResponse.prototype.clearStatusInfo = function() {
  return this.setStatusInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envelopestore.StoreResponse.prototype.hasStatusInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envelopestore.LoadByIDRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.envelopestore.LoadByIDRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envelopestore.LoadByIDRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envelopestore.LoadByIDRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envelopestore.LoadByIDRequest}
 */
proto.envelopestore.LoadByIDRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envelopestore.LoadByIDRequest;
  return proto.envelopestore.LoadByIDRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envelopestore.LoadByIDRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envelopestore.LoadByIDRequest}
 */
proto.envelopestore.LoadByIDRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envelopestore.LoadByIDRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envelopestore.LoadByIDRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envelopestore.LoadByIDRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envelopestore.LoadByIDRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.envelopestore.LoadByIDRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.envelopestore.LoadByIDRequest} returns this
 */
proto.envelopestore.LoadByIDRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envelopestore.LoadByTxHashRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.envelopestore.LoadByTxHashRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envelopestore.LoadByTxHashRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envelopestore.LoadByTxHashRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    chain: (f = msg.getChain()) && types_chain_chain_pb.Chain.toObject(includeInstance, f),
    txHash: (f = msg.getTxHash()) && types_ethereum_base_pb.Hash.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envelopestore.LoadByTxHashRequest}
 */
proto.envelopestore.LoadByTxHashRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envelopestore.LoadByTxHashRequest;
  return proto.envelopestore.LoadByTxHashRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envelopestore.LoadByTxHashRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envelopestore.LoadByTxHashRequest}
 */
proto.envelopestore.LoadByTxHashRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new types_chain_chain_pb.Chain;
      reader.readMessage(value,types_chain_chain_pb.Chain.deserializeBinaryFromReader);
      msg.setChain(value);
      break;
    case 3:
      var value = new types_ethereum_base_pb.Hash;
      reader.readMessage(value,types_ethereum_base_pb.Hash.deserializeBinaryFromReader);
      msg.setTxHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envelopestore.LoadByTxHashRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envelopestore.LoadByTxHashRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envelopestore.LoadByTxHashRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envelopestore.LoadByTxHashRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChain();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      types_chain_chain_pb.Chain.serializeBinaryToWriter
    );
  }
  f = message.getTxHash();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      types_ethereum_base_pb.Hash.serializeBinaryToWriter
    );
  }
};


/**
 * optional chain.Chain chain = 2;
 * @return {?proto.chain.Chain}
 */
proto.envelopestore.LoadByTxHashRequest.prototype.getChain = function() {
  return /** @type{?proto.chain.Chain} */ (
    jspb.Message.getWrapperField(this, types_chain_chain_pb.Chain, 2));
};


/**
 * @param {?proto.chain.Chain|undefined} value
 * @return {!proto.envelopestore.LoadByTxHashRequest} returns this
*/
proto.envelopestore.LoadByTxHashRequest.prototype.setChain = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envelopestore.LoadByTxHashRequest} returns this
 */
proto.envelopestore.LoadByTxHashRequest.prototype.clearChain = function() {
  return this.setChain(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envelopestore.LoadByTxHashRequest.prototype.hasChain = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ethereum.Hash tx_hash = 3;
 * @return {?proto.ethereum.Hash}
 */
proto.envelopestore.LoadByTxHashRequest.prototype.getTxHash = function() {
  return /** @type{?proto.ethereum.Hash} */ (
    jspb.Message.getWrapperField(this, types_ethereum_base_pb.Hash, 3));
};


/**
 * @param {?proto.ethereum.Hash|undefined} value
 * @return {!proto.envelopestore.LoadByTxHashRequest} returns this
*/
proto.envelopestore.LoadByTxHashRequest.prototype.setTxHash = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envelopestore.LoadByTxHashRequest} returns this
 */
proto.envelopestore.LoadByTxHashRequest.prototype.clearTxHash = function() {
  return this.setTxHash(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envelopestore.LoadByTxHashRequest.prototype.hasTxHash = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envelopestore.SetStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.envelopestore.SetStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envelopestore.SetStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envelopestore.SetStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envelopestore.SetStatusRequest}
 */
proto.envelopestore.SetStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envelopestore.SetStatusRequest;
  return proto.envelopestore.SetStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envelopestore.SetStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envelopestore.SetStatusRequest}
 */
proto.envelopestore.SetStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.envelopestore.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envelopestore.SetStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envelopestore.SetStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envelopestore.SetStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envelopestore.SetStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.envelopestore.SetStatusRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.envelopestore.SetStatusRequest} returns this
 */
proto.envelopestore.SetStatusRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Status status = 2;
 * @return {!proto.envelopestore.Status}
 */
proto.envelopestore.SetStatusRequest.prototype.getStatus = function() {
  return /** @type {!proto.envelopestore.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.envelopestore.Status} value
 * @return {!proto.envelopestore.SetStatusRequest} returns this
 */
proto.envelopestore.SetStatusRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envelopestore.StatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.envelopestore.StatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envelopestore.StatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envelopestore.StatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    statusInfo: (f = msg.getStatusInfo()) && proto.envelopestore.StatusInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envelopestore.StatusResponse}
 */
proto.envelopestore.StatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envelopestore.StatusResponse;
  return proto.envelopestore.StatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envelopestore.StatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envelopestore.StatusResponse}
 */
proto.envelopestore.StatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envelopestore.StatusInfo;
      reader.readMessage(value,proto.envelopestore.StatusInfo.deserializeBinaryFromReader);
      msg.setStatusInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envelopestore.StatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envelopestore.StatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envelopestore.StatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envelopestore.StatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatusInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envelopestore.StatusInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional StatusInfo status_info = 1;
 * @return {?proto.envelopestore.StatusInfo}
 */
proto.envelopestore.StatusResponse.prototype.getStatusInfo = function() {
  return /** @type{?proto.envelopestore.StatusInfo} */ (
    jspb.Message.getWrapperField(this, proto.envelopestore.StatusInfo, 1));
};


/**
 * @param {?proto.envelopestore.StatusInfo|undefined} value
 * @return {!proto.envelopestore.StatusResponse} returns this
*/
proto.envelopestore.StatusResponse.prototype.setStatusInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envelopestore.StatusResponse} returns this
 */
proto.envelopestore.StatusResponse.prototype.clearStatusInfo = function() {
  return this.setStatusInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envelopestore.StatusResponse.prototype.hasStatusInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envelopestore.LoadPendingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.envelopestore.LoadPendingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envelopestore.LoadPendingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envelopestore.LoadPendingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    duration: (f = msg.getDuration()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envelopestore.LoadPendingRequest}
 */
proto.envelopestore.LoadPendingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envelopestore.LoadPendingRequest;
  return proto.envelopestore.LoadPendingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envelopestore.LoadPendingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envelopestore.LoadPendingRequest}
 */
proto.envelopestore.LoadPendingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setDuration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envelopestore.LoadPendingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envelopestore.LoadPendingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envelopestore.LoadPendingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envelopestore.LoadPendingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDuration();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Duration duration = 1;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envelopestore.LoadPendingRequest.prototype.getDuration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 1));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.envelopestore.LoadPendingRequest} returns this
*/
proto.envelopestore.LoadPendingRequest.prototype.setDuration = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envelopestore.LoadPendingRequest} returns this
 */
proto.envelopestore.LoadPendingRequest.prototype.clearDuration = function() {
  return this.setDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envelopestore.LoadPendingRequest.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envelopestore.LoadPendingResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envelopestore.LoadPendingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.envelopestore.LoadPendingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envelopestore.LoadPendingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envelopestore.LoadPendingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    responsesList: jspb.Message.toObjectList(msg.getResponsesList(),
    proto.envelopestore.StoreResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envelopestore.LoadPendingResponse}
 */
proto.envelopestore.LoadPendingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envelopestore.LoadPendingResponse;
  return proto.envelopestore.LoadPendingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envelopestore.LoadPendingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envelopestore.LoadPendingResponse}
 */
proto.envelopestore.LoadPendingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envelopestore.StoreResponse;
      reader.readMessage(value,proto.envelopestore.StoreResponse.deserializeBinaryFromReader);
      msg.addResponses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envelopestore.LoadPendingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envelopestore.LoadPendingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envelopestore.LoadPendingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envelopestore.LoadPendingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponsesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.envelopestore.StoreResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated StoreResponse responses = 1;
 * @return {!Array<!proto.envelopestore.StoreResponse>}
 */
proto.envelopestore.LoadPendingResponse.prototype.getResponsesList = function() {
  return /** @type{!Array<!proto.envelopestore.StoreResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envelopestore.StoreResponse, 1));
};


/**
 * @param {!Array<!proto.envelopestore.StoreResponse>} value
 * @return {!proto.envelopestore.LoadPendingResponse} returns this
*/
proto.envelopestore.LoadPendingResponse.prototype.setResponsesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.envelopestore.StoreResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envelopestore.StoreResponse}
 */
proto.envelopestore.LoadPendingResponse.prototype.addResponses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.envelopestore.StoreResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envelopestore.LoadPendingResponse} returns this
 */
proto.envelopestore.LoadPendingResponse.prototype.clearResponsesList = function() {
  return this.setResponsesList([]);
};


/**
 * @enum {number}
 */
proto.envelopestore.Status = {
  STORED: 0,
  PENDING: 1,
  MINED: 2,
  ERROR: 3
};

goog.object.extend(exports, proto.envelopestore);
