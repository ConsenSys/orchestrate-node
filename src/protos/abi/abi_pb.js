/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.abi.Contract', null, global);
goog.exportSymbol('proto.abi.Method', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.abi.Contract = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.abi.Contract, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.abi.Contract.displayName = 'proto.abi.Contract';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.abi.Contract.prototype.toObject = function(opt_includeInstance) {
  return proto.abi.Contract.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.abi.Contract} msg The msg instance to transform.
 * @return {!Object}
 */
proto.abi.Contract.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tag: jspb.Message.getFieldWithDefault(msg, 2, ""),
    abi: msg.getAbi_asB64(),
    bytecode: msg.getBytecode_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.abi.Contract}
 */
proto.abi.Contract.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.abi.Contract;
  return proto.abi.Contract.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.abi.Contract} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.abi.Contract}
 */
proto.abi.Contract.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTag(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAbi(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBytecode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.abi.Contract.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.abi.Contract.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.abi.Contract} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.abi.Contract.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTag();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAbi_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getBytecode_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.abi.Contract.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.abi.Contract.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string tag = 2;
 * @return {string}
 */
proto.abi.Contract.prototype.getTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.abi.Contract.prototype.setTag = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bytes abi = 3;
 * @return {!(string|Uint8Array)}
 */
proto.abi.Contract.prototype.getAbi = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes abi = 3;
 * This is a type-conversion wrapper around `getAbi()`
 * @return {string}
 */
proto.abi.Contract.prototype.getAbi_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAbi()));
};


/**
 * optional bytes abi = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAbi()`
 * @return {!Uint8Array}
 */
proto.abi.Contract.prototype.getAbi_asU8 = function() {
  return /** @type {!0x608060405234801561001057600080fd5b5061160a806100206000396000f3006080604052600436106100955763ffffffff60e060020a60003504166316d390bf811461009a5780633c8ac88e146100c357806353faa9a91461015157806373b40a5c14610178578063781f5a83146101e7578063898d5a5b1461020e578063995fac111461022f578063d10e73ab14610256578063d12a37071461027d578063fbe5ce0a146102b8578063fd2aa0b4146102df575b600080fd5b3480156100a657600080fd5b506100c1600160a060020a0360043581169060243516610306565b005b3480156100cf57600080fd5b50604080516020601f60643560048181013592830184900484028501840190955281845261013594600160a060020a0381358116956024803583169660443590931695369560849492019181908401838280828437509497506104929650505050505050565b60408051600160a060020a039092168252519081900360200190f35b34801561015d57600080fd5b506100c1600160a060020a036004358116906024351661072e565b34801561018457600080fd5b50604080516020601f6064356004818101359283018490048402850184019095528184526100c194600160a060020a0381358116956024803590921695604435953695608494019181908401838280828437509497506108679650505050505050565b3480156101f357600080fd5b506100c1600160a060020a0360043581169060243516610a2a565b34801561021a57600080fd5b50610135600160a060020a0360043516610bf3565b34801561023b57600080fd5b506100c1600160a060020a0360043581169060243516610c0e565b34801561026257600080fd5b50610135600160a060020a0360043581169060243516610db8565b34801561028957600080fd5b506102a4600160a060020a0360043581169060243516610f1c565b604080519115158252519081900360200190f35b3480156102c457600080fd5b506100c1600160a060020a0360043581169060243516610f39565b3480156102eb57600080fd5b506102a4600160a060020a03600435811690602435166110c3565b600160a060020a03808316600090815260016020526040902054839116331461037b576040805160e560020a62461bcd028152602060048201526029602482015260008051602061159f83398151915260448201526000805160206115bf833981519152606482015290519081900360840190fd5b81600160a060020a03811615156103ca576040805160e560020a62461bcd02815260206004820152601b602482015260008051602061157f833981519152604482015290519081900360640190fd5b6103d484846110c3565b15610429576040805160e560020a62461bcd02815260206004820152601860248201527f4f776e657220616c7265616479206964656e7469666965640000000000000000604482015290519081900360640190fd5b600160a060020a0380851660008181526020818152604080832094881680845294825291829020805460ff19166001179055815133815291517f8672e8532f3edff41d3acf0cd4be6ff900e427461b81d094f0197354471cb3c69281900390910190a350505050565b60008085600160a060020a03811615156104e4576040805160e560020a62461bcd02815260206004820152601b602482015260008051602061157f833981519152604482015290519081900360640190fd5b85600160a060020a0381161515610533576040805160e560020a62461bcd02815260206004820152601b602482015260008051602061157f833981519152604482015290519081900360640190fd5b85600160a060020a0381161515610582576040805160e560020a62461bcd02815260206004820152601b602482015260008051602061157f833981519152604482015290519081900360640190fd5b61058a6110f5565b604051809103906000f0801580156105a6573d6000803e3d6000fd5b50600160a060020a038082166000818152602081815260408083208f8616808552908352818420805460ff191660019081179091558585528352928190208054958f1673ffffffffffffffffffffffffffffffffffffffff1990961686179055805192835251949850929333937f14e580ab5cd452b772e031536a7c893ec705152c17b3665c6671b382c3ee6266928290030190a483600160a060020a031663d7f31eb9886000896040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156106bb5781810151838201526020016106a3565b50505050905090810190601f1680156106e85780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15801561070957600080fd5b505af115801561071d573d6000803e3d6000fd5b50959b9a5050505050505050505050565b600160a060020a0380831660009081526001602052604090205483911633146107a3576040805160e560020a62461bcd028152602060048201526029602482015260008051602061159f83398151915260448201526000805160206115bf833981519152606482015290519081900360840190fd5b81600160a060020a03811615156107f2576040805160e560020a62461bcd02815260206004820152601b602482015260008051602061157f833981519152604482015290519081900360640190fd5b600160a060020a03848116600081815260016020908152604091829020805473ffffffffffffffffffffffffffffffffffffffff19169488169485179055815133815291517fbd1ad05c16aafa75ac8c1d6b8264f47ad9f3045596f667c9476f3f749c0187099281900390910190a350505050565b8361087281336110c3565b15156108ee576040805160e560020a62461bcd02815260206004820152602660248201527f596f7520617265206e6f7420746865206f776e6572206f66207468697320696460448201527f656e746974790000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b83600160a060020a038116151561093d576040805160e560020a62461bcd02815260206004820152601b602482015260008051602061157f833981519152604482015290519081900360640190fd5b85600160a060020a031663d7f31eb98686866040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156109bc5781810151838201526020016109a4565b50505050905090810190601f1680156109e95780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b158015610a0a57600080fd5b505af1158015610a1e573d6000803e3d6000fd5b50505050505050505050565b81600160a060020a0381161515610a79576040805160e560020a62461bcd02815260206004820152601b602482015260008051602061157f833981519152604482015290519081900360640190fd5b81600160a060020a0381161515610ac8576040805160e560020a62461bcd02815260206004820152601b602482015260008051602061157f833981519152604482015290519081900360640190fd5b33600090815260016020526040902054600160a060020a031615610b5c576040805160e560020a62461bcd02815260206004820152602a60248201527f41207265636f76657279206b65792068617320616c7265616479206265656e2060448201527f7265676973746572656400000000000000000000000000000000000000000000606482015290519081900360840190fd5b33600081815260208181526040808320600160a060020a03898116808652918452828520805460ff19166001908117909155868652845293829020805494891673ffffffffffffffffffffffffffffffffffffffff19909516851790558151908152905192939283927f14e580ab5cd452b772e031536a7c893ec705152c17b3665c6671b382c3ee6266928290030190a450505050565b600160205260009081526040902054600160a060020a031681565b600160a060020a038083166000908152600160205260409020548391163314610c83576040805160e560020a62461bcd028152602060048201526029602482015260008051602061159f83398151915260448201526000805160206115bf833981519152606482015290519081900360840190fd5b81600160a060020a0381161515610cd2576040805160e560020a62461bcd02815260206004820152601b602482015260008051602061157f833981519152604482015290519081900360640190fd5b83600160a060020a031663f2fde38b846040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050600060405180830381600087803b158015610d2d57600080fd5b505af1158015610d41573d6000803e3d6000fd5b50505050600160a060020a03848116600081815260016020908152604091829020805473ffffffffffffffffffffffffffffffffffffffff1916905581513381529151938716937f2d41c56ab078052b683ca1163c14eab6e2591081755158ca8f947896ea2776e79281900390910190a350505050565b60008083600160a060020a0381161515610e0a576040805160e560020a62461bcd02815260206004820152601b602482015260008051602061157f833981519152604482015290519081900360640190fd5b83600160a060020a0381161515610e59576040805160e560020a62461bcd02815260206004820152601b602482015260008051602061157f833981519152604482015290519081900360640190fd5b610e616110f5565b604051809103906000f080158015610e7d573d6000803e3d6000fd5b50600160a060020a038082166000818152602081815260408083208c8616808552908352818420805460ff191660019081179091558585528352928190208054958c1673ffffffffffffffffffffffffffffffffffffffff1990961686179055805192835251949750929333937f14e580ab5cd452b772e031536a7c893ec705152c17b3665c6671b382c3ee6266928290030190a45090949350505050565b600060208181529281526040808220909352908152205460ff1681565b600160a060020a038083166000908152600160205260409020548391163314610fae576040805160e560020a62461bcd028152602060048201526029602482015260008051602061159f83398151915260448201526000805160206115bf833981519152606482015290519081900360840190fd5b81600160a060020a0381161515610ffd576040805160e560020a62461bcd02815260206004820152601b602482015260008051602061157f833981519152604482015290519081900360640190fd5b61100784846110c3565b151561105d576040805160e560020a62461bcd02815260206004820152601d60248201527f4973206e6f74206f776e6572206f662074686973206964656e74697479000000604482015290519081900360640190fd5b600160a060020a0380851660008181526020818152604080832094881680845294825291829020805460ff19169055815133815291517f5e159cd4447854ae8b4aa048f91c8daad986faab696c3685030e1a5e5a4e8ced9281900390910190a350505050565b600160a060020a038083166000908152602081815260408083209385168352929052205460ff16151560011492915050565b60405161047980611106833901905600608060405260008054600160a060020a03191633179055610454806100256000396000f3006080604052600436106100615763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663715018a681146100995780638da5cb5b146100b0578063d7f31eb9146100e1578063f2fde38b1461014a575b60408051348152905133917f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874919081900360200190a2005b3480156100a557600080fd5b506100ae61016b565b005b3480156100bc57600080fd5b506100c56101d7565b60408051600160a060020a039092168252519081900360200190f35b3480156100ed57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526100ae948235600160a060020a03169460248035953695946064949201919081908401838280828437509497506101e69650505050505050565b34801561015657600080fd5b506100ae600160a060020a0360043516610371565b600054600160a060020a0316331461018257600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031681565b600054600160a060020a031633146101fd57600080fd5b610208838383610394565b15156102c157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604f60248201527f546865207472616e73616374696f6e20686173206e6f74206265656e20666f7260448201527f7761726465642c20706c6561736520636865636b2064657374696e6174696f6e60648201527f2c2076616c7565206f7220646174610000000000000000000000000000000000608482015290519081900360a40190fd5b82600160a060020a03167fc1de93dfa06362c6a616cde73ec17d116c0d588dd1df70f27f91b500de207c4183836040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610331578181015183820152602001610319565b50505050905090810190601f16801561035e5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a2505050565b600054600160a060020a0316331461038857600080fd5b610391816103ab565b50565b600080600083516020850186885af1949350505050565b600160a060020a03811615156103c057600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820d1d0b0e09741d992ec47c62e6afccbcd089052c6053dd6f1629dd2c145e6aae5002954686973206973206e6f7420612076616c696420616464726573730000000000596f7520617265206e6f7420746865207265636f76657279206f662074686973206964656e746974790000000000000000000000000000000000000000000000a165627a7a72305820691eff66e59f349ce5df0f98d33920a89d531d621bcc3223d0cad042ce1ad3dc0029} */ (jspb.Message.bytesAsU8(
      this.getAbi()));
};


/** @param {!(string|Uint8Array)} value */
proto.abi.Contract.prototype.setAbi = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional bytes bytecode = 4;
 * @return {!(string|Uint8Array)}
 */
proto.abi.Contract.prototype.getBytecode = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes bytecode = 4;
 * This is a type-conversion wrapper around `getBytecode()`
 * @return {string}
 */
proto.abi.Contract.prototype.getBytecode_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBytecode()));
};


/**
 * optional bytes bytecode = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBytecode()`
 * @return {!Uint8Array}
 */
proto.abi.Contract.prototype.getBytecode_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBytecode()));
};


/** @param {!(string|Uint8Array)} value */
proto.abi.Contract.prototype.setBytecode = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.abi.Method = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.abi.Method, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.abi.Method.displayName = 'proto.abi.Method';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.abi.Method.prototype.toObject = function(opt_includeInstance) {
  return proto.abi.Method.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.abi.Method} msg The msg instance to transform.
 * @return {!Object}
 */
proto.abi.Method.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    abi: msg.getAbi_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.abi.Method}
 */
proto.abi.Method.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.abi.Method;
  return proto.abi.Method.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.abi.Method} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.abi.Method}
 */
proto.abi.Method.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAbi(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.abi.Method.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.abi.Method.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.abi.Method} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.abi.Method.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAbi_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.abi.Method.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.abi.Method.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bytes abi = 2;
 * @return {!(string|Uint8Array)}
 */
proto.abi.Method.prototype.getAbi = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes abi = 2;
 * This is a type-conversion wrapper around `getAbi()`
 * @return {string}
 */
proto.abi.Method.prototype.getAbi_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAbi()));
};


/**
 * optional bytes abi = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAbi()`
 * @return {!Uint8Array}
 */
proto.abi.Method.prototype.getAbi_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAbi()));
};


/** @param {!(string|Uint8Array)} value */
proto.abi.Method.prototype.setAbi = function(value) {
  jspb.Message.setField(this, 2, value);
};


goog.object.extend(exports, proto.abi);
