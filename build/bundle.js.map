{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"kafka-node\"","webpack:///./protobuf/trace/trace_pb.js","webpack:///./protobuf/ethereum/ethereum_pb.js","webpack:///external \"google-protobuf\"","webpack:///external \"events\"","webpack:///external \"uuid/v4\"","webpack:///external \"web3-utils\"","webpack:///./src/consumer.js","webpack:///./src/producer.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","jspb","goog","global","Function","protobuf_ethereum_ethereum_pb","exportSymbol","proto","context","manager","Account","opt_data","Message","initialize","this","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","id","getFieldWithDefault","address","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","readString","setId","setAddress","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","f","undefined","getId","length","writeString","getAddress","setField","Chain","iseip155","readBool","setIseip155","getIseip155","writeBool","Call","repeatedFields_","methodid","argsList","getField","setMethodid","addArgs","getMethodid","getArgsList","writeRepeatedString","setArgsList","opt_index","addToRepeatedField","clearArgsList","Metadata","Error","type","readUint64","setType","setMessage","getType","writeUint64","getMessage","Trace","sender","getSender","chain","getChain","receiver","getReceiver","getCall","transaction","getTransaction","Transaction","receipt","getReceipt","Receipt","errorsList","toObjectList","getErrorsList","metadata","getMetadata","readMessage","setSender","setChain","setReceiver","setCall","setTransaction","setReceipt","addErrors","setMetadata","writeMessage","writeRepeatedMessage","getWrapperField","setWrapperField","clearSender","hasSender","clearChain","hasChain","clearReceiver","hasReceiver","clearCall","hasCall","clearTransaction","hasTransaction","clearReceipt","hasReceipt","getRepeatedWrapperField","setErrorsList","setRepeatedWrapperField","opt_value","addToRepeatedWrapperField","clearErrorsList","clearMetadata","hasMetadata","extend","TxData","nonce","to","gas","gasprice","data","setNonce","setTo","setValue","setGas","setGasprice","setData","getNonce","getTo","getValue","getGas","getGasprice","getData","txdata","getTxdata","raw","hash","setTxdata","setRaw","setHash","getRaw","getHash","clearTxdata","hasTxdata","Log","topicsList","decodeddataMap","getDecodeddataMap","blocknumber","txhash","txindex","blockhash","index","removed","addTopics","Map","setBlocknumber","setTxhash","setTxindex","setBlockhash","setIndex","setRemoved","getTopicsList","getLength","getBlocknumber","getTxhash","getTxindex","getBlockhash","getIndex","getRemoved","setTopicsList","clearTopicsList","opt_noLazyCreate","getMapField","clearDecodeddataMap","clear","contractaddress","poststate","status","bloom","logsList","getLogsList","gasused","cumulativegasused","setContractaddress","setPoststate","setStatus","setBloom","addLogs","setGasused","setCumulativegasused","getContractaddress","getPoststate","getStatus","getBloom","getGasused","getCumulativegasused","setLogsList","clearLogsList","Consumer","consumer","_this","_classCallCheck","_defineProperty","trace_pb","on","emitter","emit","unmarshal","error","EventEmitter","CoreStackConsummer","_Consumer","client","topic","latestOffset","options","_this2","kafka","offset","_objectSpread","encoding","fromOffset","_possibleConstructorReturn","_getPrototypeOf","_inherits","CoreStackConsummerGroup","_Consumer2","hostname","ConsumerGroup","kafkaHost","CoreStackProducer","producer_classCallCheck","producer_defineProperty","trace","Utils","ethereum_pb","txData","entries","forEach","_ref","_ref2","_slicedToArray","marshallChainId","marshallFrom","marshallTo","marshallCall","Buffer","from","kafkaOptions","Promise","resolve","reject","uuidv4","payloads","producer_objectSpread","messages","marshall","producer","send","err","Producer","CoreStack","src_classCallCheck","src_defineProperty","CSProducer","ready","Offset","fetchLatestOffsets","offsets","_asyncToGenerator","regeneratorRuntime","mark","_callee2","wrap","_context2","prev","next","abrupt","_callee","CSConsumer","_context","getLatestOffset","sent","stop","_x3","_x4","apply","arguments","_x","_x2","_ref3","_callee3","CSConsumerGroup","_context3","_x5","_x6","KafkaClient","src_objectSpread"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"build/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = require(\"kafka-node\");","/* eslint-disable */\n/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar protobuf_ethereum_ethereum_pb = require('../../protobuf/ethereum/ethereum_pb.js');\ngoog.exportSymbol('proto.context.manager.Account', null, global);\ngoog.exportSymbol('proto.context.manager.Call', null, global);\ngoog.exportSymbol('proto.context.manager.Chain', null, global);\ngoog.exportSymbol('proto.context.manager.Error', null, global);\ngoog.exportSymbol('proto.context.manager.Metadata', null, global);\ngoog.exportSymbol('proto.context.manager.Trace', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.context.manager.Account = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.context.manager.Account, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.context.manager.Account.displayName = 'proto.context.manager.Account';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.context.manager.Account.prototype.toObject = function(opt_includeInstance) {\n  return proto.context.manager.Account.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.context.manager.Account} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.context.manager.Account.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    address: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.context.manager.Account}\n */\nproto.context.manager.Account.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.context.manager.Account;\n  return proto.context.manager.Account.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.context.manager.Account} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.context.manager.Account}\n */\nproto.context.manager.Account.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.context.manager.Account.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.context.manager.Account.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.context.manager.Account} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.context.manager.Account.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.context.manager.Account.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.context.manager.Account.prototype.setId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string address = 2;\n * @return {string}\n */\nproto.context.manager.Account.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.context.manager.Account.prototype.setAddress = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.context.manager.Chain = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.context.manager.Chain, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.context.manager.Chain.displayName = 'proto.context.manager.Chain';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.context.manager.Chain.prototype.toObject = function(opt_includeInstance) {\n  return proto.context.manager.Chain.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.context.manager.Chain} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.context.manager.Chain.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    iseip155: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.context.manager.Chain}\n */\nproto.context.manager.Chain.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.context.manager.Chain;\n  return proto.context.manager.Chain.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.context.manager.Chain} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.context.manager.Chain}\n */\nproto.context.manager.Chain.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIseip155(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.context.manager.Chain.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.context.manager.Chain.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.context.manager.Chain} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.context.manager.Chain.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getIseip155();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.context.manager.Chain.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.context.manager.Chain.prototype.setId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool isEIP155 = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.context.manager.Chain.prototype.getIseip155 = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.context.manager.Chain.prototype.setIseip155 = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.context.manager.Call = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.context.manager.Call.repeatedFields_, null);\n};\ngoog.inherits(proto.context.manager.Call, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.context.manager.Call.displayName = 'proto.context.manager.Call';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.context.manager.Call.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.context.manager.Call.prototype.toObject = function(opt_includeInstance) {\n  return proto.context.manager.Call.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.context.manager.Call} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.context.manager.Call.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    methodid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    argsList: jspb.Message.getField(msg, 2)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.context.manager.Call}\n */\nproto.context.manager.Call.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.context.manager.Call;\n  return proto.context.manager.Call.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.context.manager.Call} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.context.manager.Call}\n */\nproto.context.manager.Call.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMethodid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addArgs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.context.manager.Call.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.context.manager.Call.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.context.manager.Call} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.context.manager.Call.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMethodid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getArgsList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string methodId = 1;\n * @return {string}\n */\nproto.context.manager.Call.prototype.getMethodid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.context.manager.Call.prototype.setMethodid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * repeated string args = 2;\n * If you change this array by adding, removing or replacing elements, or if you\n * replace the array itself, then you must call the setter to update it.\n * @return {!Array.<string>}\n */\nproto.context.manager.Call.prototype.getArgsList = function() {\n  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 2));\n};\n\n\n/** @param {!Array.<string>} value */\nproto.context.manager.Call.prototype.setArgsList = function(value) {\n  jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {!string} value\n * @param {number=} opt_index\n */\nproto.context.manager.Call.prototype.addArgs = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\nproto.context.manager.Call.prototype.clearArgsList = function() {\n  this.setArgsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.context.manager.Metadata = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.context.manager.Metadata, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.context.manager.Metadata.displayName = 'proto.context.manager.Metadata';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.context.manager.Metadata.prototype.toObject = function(opt_includeInstance) {\n  return proto.context.manager.Metadata.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.context.manager.Metadata} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.context.manager.Metadata.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.context.manager.Metadata}\n */\nproto.context.manager.Metadata.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.context.manager.Metadata;\n  return proto.context.manager.Metadata.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.context.manager.Metadata} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.context.manager.Metadata}\n */\nproto.context.manager.Metadata.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.context.manager.Metadata.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.context.manager.Metadata.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.context.manager.Metadata} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.context.manager.Metadata.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.context.manager.Metadata.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.context.manager.Metadata.prototype.setId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.context.manager.Error = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.context.manager.Error, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.context.manager.Error.displayName = 'proto.context.manager.Error';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.context.manager.Error.prototype.toObject = function(opt_includeInstance) {\n  return proto.context.manager.Error.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.context.manager.Error} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.context.manager.Error.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    message: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.context.manager.Error}\n */\nproto.context.manager.Error.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.context.manager.Error;\n  return proto.context.manager.Error.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.context.manager.Error} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.context.manager.Error}\n */\nproto.context.manager.Error.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setType(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.context.manager.Error.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.context.manager.Error.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.context.manager.Error} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.context.manager.Error.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getType();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 type = 1;\n * @return {number}\n */\nproto.context.manager.Error.prototype.getType = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.context.manager.Error.prototype.setType = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.context.manager.Error.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.context.manager.Error.prototype.setMessage = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.context.manager.Trace = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.context.manager.Trace.repeatedFields_, null);\n};\ngoog.inherits(proto.context.manager.Trace, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.context.manager.Trace.displayName = 'proto.context.manager.Trace';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.context.manager.Trace.repeatedFields_ = [7];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.context.manager.Trace.prototype.toObject = function(opt_includeInstance) {\n  return proto.context.manager.Trace.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.context.manager.Trace} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.context.manager.Trace.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sender: (f = msg.getSender()) && proto.context.manager.Account.toObject(includeInstance, f),\n    chain: (f = msg.getChain()) && proto.context.manager.Chain.toObject(includeInstance, f),\n    receiver: (f = msg.getReceiver()) && proto.context.manager.Account.toObject(includeInstance, f),\n    call: (f = msg.getCall()) && proto.context.manager.Call.toObject(includeInstance, f),\n    transaction: (f = msg.getTransaction()) && protobuf_ethereum_ethereum_pb.Transaction.toObject(includeInstance, f),\n    receipt: (f = msg.getReceipt()) && protobuf_ethereum_ethereum_pb.Receipt.toObject(includeInstance, f),\n    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),\n    proto.context.manager.Error.toObject, includeInstance),\n    metadata: (f = msg.getMetadata()) && proto.context.manager.Metadata.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.context.manager.Trace}\n */\nproto.context.manager.Trace.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.context.manager.Trace;\n  return proto.context.manager.Trace.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.context.manager.Trace} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.context.manager.Trace}\n */\nproto.context.manager.Trace.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.context.manager.Account;\n      reader.readMessage(value,proto.context.manager.Account.deserializeBinaryFromReader);\n      msg.setSender(value);\n      break;\n    case 2:\n      var value = new proto.context.manager.Chain;\n      reader.readMessage(value,proto.context.manager.Chain.deserializeBinaryFromReader);\n      msg.setChain(value);\n      break;\n    case 3:\n      var value = new proto.context.manager.Account;\n      reader.readMessage(value,proto.context.manager.Account.deserializeBinaryFromReader);\n      msg.setReceiver(value);\n      break;\n    case 4:\n      var value = new proto.context.manager.Call;\n      reader.readMessage(value,proto.context.manager.Call.deserializeBinaryFromReader);\n      msg.setCall(value);\n      break;\n    case 5:\n      var value = new protobuf_ethereum_ethereum_pb.Transaction;\n      reader.readMessage(value,protobuf_ethereum_ethereum_pb.Transaction.deserializeBinaryFromReader);\n      msg.setTransaction(value);\n      break;\n    case 6:\n      var value = new protobuf_ethereum_ethereum_pb.Receipt;\n      reader.readMessage(value,protobuf_ethereum_ethereum_pb.Receipt.deserializeBinaryFromReader);\n      msg.setReceipt(value);\n      break;\n    case 7:\n      var value = new proto.context.manager.Error;\n      reader.readMessage(value,proto.context.manager.Error.deserializeBinaryFromReader);\n      msg.addErrors(value);\n      break;\n    case 8:\n      var value = new proto.context.manager.Metadata;\n      reader.readMessage(value,proto.context.manager.Metadata.deserializeBinaryFromReader);\n      msg.setMetadata(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.context.manager.Trace.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.context.manager.Trace.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.context.manager.Trace} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.context.manager.Trace.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSender();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.context.manager.Account.serializeBinaryToWriter\n    );\n  }\n  f = message.getChain();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.context.manager.Chain.serializeBinaryToWriter\n    );\n  }\n  f = message.getReceiver();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.context.manager.Account.serializeBinaryToWriter\n    );\n  }\n  f = message.getCall();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.context.manager.Call.serializeBinaryToWriter\n    );\n  }\n  f = message.getTransaction();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      protobuf_ethereum_ethereum_pb.Transaction.serializeBinaryToWriter\n    );\n  }\n  f = message.getReceipt();\n  if (f != null) {\n    writer.writeMessage(\n      6,\n      f,\n      protobuf_ethereum_ethereum_pb.Receipt.serializeBinaryToWriter\n    );\n  }\n  f = message.getErrorsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      7,\n      f,\n      proto.context.manager.Error.serializeBinaryToWriter\n    );\n  }\n  f = message.getMetadata();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      proto.context.manager.Metadata.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Account sender = 1;\n * @return {?proto.context.manager.Account}\n */\nproto.context.manager.Trace.prototype.getSender = function() {\n  return /** @type{?proto.context.manager.Account} */ (\n    jspb.Message.getWrapperField(this, proto.context.manager.Account, 1));\n};\n\n\n/** @param {?proto.context.manager.Account|undefined} value */\nproto.context.manager.Trace.prototype.setSender = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.context.manager.Trace.prototype.clearSender = function() {\n  this.setSender(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.context.manager.Trace.prototype.hasSender = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional Chain chain = 2;\n * @return {?proto.context.manager.Chain}\n */\nproto.context.manager.Trace.prototype.getChain = function() {\n  return /** @type{?proto.context.manager.Chain} */ (\n    jspb.Message.getWrapperField(this, proto.context.manager.Chain, 2));\n};\n\n\n/** @param {?proto.context.manager.Chain|undefined} value */\nproto.context.manager.Trace.prototype.setChain = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.context.manager.Trace.prototype.clearChain = function() {\n  this.setChain(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.context.manager.Trace.prototype.hasChain = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional Account receiver = 3;\n * @return {?proto.context.manager.Account}\n */\nproto.context.manager.Trace.prototype.getReceiver = function() {\n  return /** @type{?proto.context.manager.Account} */ (\n    jspb.Message.getWrapperField(this, proto.context.manager.Account, 3));\n};\n\n\n/** @param {?proto.context.manager.Account|undefined} value */\nproto.context.manager.Trace.prototype.setReceiver = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.context.manager.Trace.prototype.clearReceiver = function() {\n  this.setReceiver(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.context.manager.Trace.prototype.hasReceiver = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional Call call = 4;\n * @return {?proto.context.manager.Call}\n */\nproto.context.manager.Trace.prototype.getCall = function() {\n  return /** @type{?proto.context.manager.Call} */ (\n    jspb.Message.getWrapperField(this, proto.context.manager.Call, 4));\n};\n\n\n/** @param {?proto.context.manager.Call|undefined} value */\nproto.context.manager.Trace.prototype.setCall = function(value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\n\nproto.context.manager.Trace.prototype.clearCall = function() {\n  this.setCall(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.context.manager.Trace.prototype.hasCall = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional Transaction transaction = 5;\n * @return {?proto.context.manager.Transaction}\n */\nproto.context.manager.Trace.prototype.getTransaction = function() {\n  return /** @type{?proto.context.manager.Transaction} */ (\n    jspb.Message.getWrapperField(this, protobuf_ethereum_ethereum_pb.Transaction, 5));\n};\n\n\n/** @param {?proto.context.manager.Transaction|undefined} value */\nproto.context.manager.Trace.prototype.setTransaction = function(value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n\n\nproto.context.manager.Trace.prototype.clearTransaction = function() {\n  this.setTransaction(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.context.manager.Trace.prototype.hasTransaction = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional Receipt receipt = 6;\n * @return {?proto.context.manager.Receipt}\n */\nproto.context.manager.Trace.prototype.getReceipt = function() {\n  return /** @type{?proto.context.manager.Receipt} */ (\n    jspb.Message.getWrapperField(this, protobuf_ethereum_ethereum_pb.Receipt, 6));\n};\n\n\n/** @param {?proto.context.manager.Receipt|undefined} value */\nproto.context.manager.Trace.prototype.setReceipt = function(value) {\n  jspb.Message.setWrapperField(this, 6, value);\n};\n\n\nproto.context.manager.Trace.prototype.clearReceipt = function() {\n  this.setReceipt(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.context.manager.Trace.prototype.hasReceipt = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * repeated Error errors = 7;\n * If you change this array by adding, removing or replacing elements, or if you\n * replace the array itself, then you must call the setter to update it.\n * @return {!Array.<!proto.context.manager.Error>}\n */\nproto.context.manager.Trace.prototype.getErrorsList = function() {\n  return /** @type{!Array.<!proto.context.manager.Error>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.context.manager.Error, 7));\n};\n\n\n/** @param {!Array.<!proto.context.manager.Error>} value */\nproto.context.manager.Trace.prototype.setErrorsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 7, value);\n};\n\n\n/**\n * @param {!proto.context.manager.Error=} opt_value\n * @param {number=} opt_index\n * @return {!proto.context.manager.Error}\n */\nproto.context.manager.Trace.prototype.addErrors = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.context.manager.Error, opt_index);\n};\n\n\nproto.context.manager.Trace.prototype.clearErrorsList = function() {\n  this.setErrorsList([]);\n};\n\n\n/**\n * optional Metadata metadata = 8;\n * @return {?proto.context.manager.Metadata}\n */\nproto.context.manager.Trace.prototype.getMetadata = function() {\n  return /** @type{?proto.context.manager.Metadata} */ (\n    jspb.Message.getWrapperField(this, proto.context.manager.Metadata, 8));\n};\n\n\n/** @param {?proto.context.manager.Metadata|undefined} value */\nproto.context.manager.Trace.prototype.setMetadata = function(value) {\n  jspb.Message.setWrapperField(this, 8, value);\n};\n\n\nproto.context.manager.Trace.prototype.clearMetadata = function() {\n  this.setMetadata(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.context.manager.Trace.prototype.hasMetadata = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\ngoog.object.extend(exports, proto.context.manager);\n","/* eslint-disable */\n/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.context.manager.Log', null, global);\ngoog.exportSymbol('proto.context.manager.Receipt', null, global);\ngoog.exportSymbol('proto.context.manager.Transaction', null, global);\ngoog.exportSymbol('proto.context.manager.TxData', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.context.manager.TxData = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.context.manager.TxData, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.context.manager.TxData.displayName = 'proto.context.manager.TxData';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.context.manager.TxData.prototype.toObject = function(opt_includeInstance) {\n  return proto.context.manager.TxData.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.context.manager.TxData} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.context.manager.TxData.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nonce: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    to: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    value: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    gas: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    gasprice: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    data: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.context.manager.TxData}\n */\nproto.context.manager.TxData.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.context.manager.TxData;\n  return proto.context.manager.TxData.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.context.manager.TxData} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.context.manager.TxData}\n */\nproto.context.manager.TxData.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setNonce(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTo(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setValue(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setGas(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setGasprice(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setData(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.context.manager.TxData.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.context.manager.TxData.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.context.manager.TxData} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.context.manager.TxData.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNonce();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getTo();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getValue();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getGas();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getGasprice();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getData();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 nonce = 1;\n * @return {number}\n */\nproto.context.manager.TxData.prototype.getNonce = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.context.manager.TxData.prototype.setNonce = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string to = 2;\n * @return {string}\n */\nproto.context.manager.TxData.prototype.getTo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.context.manager.TxData.prototype.setTo = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string value = 3;\n * @return {string}\n */\nproto.context.manager.TxData.prototype.getValue = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.context.manager.TxData.prototype.setValue = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint64 gas = 4;\n * @return {number}\n */\nproto.context.manager.TxData.prototype.getGas = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.context.manager.TxData.prototype.setGas = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string gasPrice = 5;\n * @return {string}\n */\nproto.context.manager.TxData.prototype.getGasprice = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.context.manager.TxData.prototype.setGasprice = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string data = 6;\n * @return {string}\n */\nproto.context.manager.TxData.prototype.getData = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.context.manager.TxData.prototype.setData = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.context.manager.Transaction = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.context.manager.Transaction, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.context.manager.Transaction.displayName = 'proto.context.manager.Transaction';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.context.manager.Transaction.prototype.toObject = function(opt_includeInstance) {\n  return proto.context.manager.Transaction.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.context.manager.Transaction} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.context.manager.Transaction.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    txdata: (f = msg.getTxdata()) && proto.context.manager.TxData.toObject(includeInstance, f),\n    raw: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    hash: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.context.manager.Transaction}\n */\nproto.context.manager.Transaction.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.context.manager.Transaction;\n  return proto.context.manager.Transaction.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.context.manager.Transaction} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.context.manager.Transaction}\n */\nproto.context.manager.Transaction.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.context.manager.TxData;\n      reader.readMessage(value,proto.context.manager.TxData.deserializeBinaryFromReader);\n      msg.setTxdata(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRaw(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.context.manager.Transaction.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.context.manager.Transaction.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.context.manager.Transaction} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.context.manager.Transaction.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTxdata();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.context.manager.TxData.serializeBinaryToWriter\n    );\n  }\n  f = message.getRaw();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getHash();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional TxData txData = 1;\n * @return {?proto.context.manager.TxData}\n */\nproto.context.manager.Transaction.prototype.getTxdata = function() {\n  return /** @type{?proto.context.manager.TxData} */ (\n    jspb.Message.getWrapperField(this, proto.context.manager.TxData, 1));\n};\n\n\n/** @param {?proto.context.manager.TxData|undefined} value */\nproto.context.manager.Transaction.prototype.setTxdata = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.context.manager.Transaction.prototype.clearTxdata = function() {\n  this.setTxdata(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.context.manager.Transaction.prototype.hasTxdata = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string raw = 2;\n * @return {string}\n */\nproto.context.manager.Transaction.prototype.getRaw = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.context.manager.Transaction.prototype.setRaw = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string hash = 3;\n * @return {string}\n */\nproto.context.manager.Transaction.prototype.getHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.context.manager.Transaction.prototype.setHash = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.context.manager.Log = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.context.manager.Log.repeatedFields_, null);\n};\ngoog.inherits(proto.context.manager.Log, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.context.manager.Log.displayName = 'proto.context.manager.Log';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.context.manager.Log.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.context.manager.Log.prototype.toObject = function(opt_includeInstance) {\n  return proto.context.manager.Log.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.context.manager.Log} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.context.manager.Log.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    topicsList: jspb.Message.getField(msg, 2),\n    data: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    decodeddataMap: (f = msg.getDecodeddataMap()) ? f.toObject(includeInstance, undefined) : [],\n    blocknumber: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    txhash: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    txindex: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    blockhash: jspb.Message.getFieldWithDefault(msg, 8, \"\"),\n    index: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    removed: jspb.Message.getFieldWithDefault(msg, 10, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.context.manager.Log}\n */\nproto.context.manager.Log.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.context.manager.Log;\n  return proto.context.manager.Log.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.context.manager.Log} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.context.manager.Log}\n */\nproto.context.manager.Log.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addTopics(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setData(value);\n      break;\n    case 4:\n      var value = msg.getDecodeddataMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString);\n         });\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBlocknumber(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTxhash(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setTxindex(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBlockhash(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setIndex(value);\n      break;\n    case 10:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setRemoved(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.context.manager.Log.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.context.manager.Log.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.context.manager.Log} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.context.manager.Log.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getTopicsList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      2,\n      f\n    );\n  }\n  f = message.getData();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getDecodeddataMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);\n  }\n  f = message.getBlocknumber();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getTxhash();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getTxindex();\n  if (f !== 0) {\n    writer.writeUint64(\n      7,\n      f\n    );\n  }\n  f = message.getBlockhash();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = message.getIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      9,\n      f\n    );\n  }\n  f = message.getRemoved();\n  if (f) {\n    writer.writeBool(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.context.manager.Log.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.context.manager.Log.prototype.setAddress = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * repeated string topics = 2;\n * If you change this array by adding, removing or replacing elements, or if you\n * replace the array itself, then you must call the setter to update it.\n * @return {!Array.<string>}\n */\nproto.context.manager.Log.prototype.getTopicsList = function() {\n  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 2));\n};\n\n\n/** @param {!Array.<string>} value */\nproto.context.manager.Log.prototype.setTopicsList = function(value) {\n  jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {!string} value\n * @param {number=} opt_index\n */\nproto.context.manager.Log.prototype.addTopics = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\nproto.context.manager.Log.prototype.clearTopicsList = function() {\n  this.setTopicsList([]);\n};\n\n\n/**\n * optional string data = 3;\n * @return {string}\n */\nproto.context.manager.Log.prototype.getData = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.context.manager.Log.prototype.setData = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * map<string, string> decodedData = 4;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,string>}\n */\nproto.context.manager.Log.prototype.getDecodeddataMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,string>} */ (\n      jspb.Message.getMapField(this, 4, opt_noLazyCreate,\n      null));\n};\n\n\nproto.context.manager.Log.prototype.clearDecodeddataMap = function() {\n  this.getDecodeddataMap().clear();\n};\n\n\n/**\n * optional uint64 blockNumber = 5;\n * @return {number}\n */\nproto.context.manager.Log.prototype.getBlocknumber = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.context.manager.Log.prototype.setBlocknumber = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string txHash = 6;\n * @return {string}\n */\nproto.context.manager.Log.prototype.getTxhash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.context.manager.Log.prototype.setTxhash = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional uint64 txIndex = 7;\n * @return {number}\n */\nproto.context.manager.Log.prototype.getTxindex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.context.manager.Log.prototype.setTxindex = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string blockHash = 8;\n * @return {string}\n */\nproto.context.manager.Log.prototype.getBlockhash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/** @param {string} value */\nproto.context.manager.Log.prototype.setBlockhash = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional uint64 index = 9;\n * @return {number}\n */\nproto.context.manager.Log.prototype.getIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.context.manager.Log.prototype.setIndex = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional bool removed = 10;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.context.manager.Log.prototype.getRemoved = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));\n};\n\n\n/** @param {boolean} value */\nproto.context.manager.Log.prototype.setRemoved = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.context.manager.Receipt = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.context.manager.Receipt.repeatedFields_, null);\n};\ngoog.inherits(proto.context.manager.Receipt, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.context.manager.Receipt.displayName = 'proto.context.manager.Receipt';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.context.manager.Receipt.repeatedFields_ = [11];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.context.manager.Receipt.prototype.toObject = function(opt_includeInstance) {\n  return proto.context.manager.Receipt.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.context.manager.Receipt} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.context.manager.Receipt.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    txhash: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    blockhash: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    blocknumber: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    txindex: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    contractaddress: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    poststate: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    status: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    bloom: jspb.Message.getFieldWithDefault(msg, 10, \"\"),\n    logsList: jspb.Message.toObjectList(msg.getLogsList(),\n    proto.context.manager.Log.toObject, includeInstance),\n    gasused: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    cumulativegasused: jspb.Message.getFieldWithDefault(msg, 13, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.context.manager.Receipt}\n */\nproto.context.manager.Receipt.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.context.manager.Receipt;\n  return proto.context.manager.Receipt.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.context.manager.Receipt} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.context.manager.Receipt}\n */\nproto.context.manager.Receipt.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTxhash(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBlockhash(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBlocknumber(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setTxindex(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setContractaddress(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPoststate(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setStatus(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBloom(value);\n      break;\n    case 11:\n      var value = new proto.context.manager.Log;\n      reader.readMessage(value,proto.context.manager.Log.deserializeBinaryFromReader);\n      msg.addLogs(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setGasused(value);\n      break;\n    case 13:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setCumulativegasused(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.context.manager.Receipt.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.context.manager.Receipt.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.context.manager.Receipt} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.context.manager.Receipt.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTxhash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getBlockhash();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getBlocknumber();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getTxindex();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getContractaddress();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getPoststate();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getStatus();\n  if (f !== 0) {\n    writer.writeUint64(\n      8,\n      f\n    );\n  }\n  f = message.getBloom();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = message.getLogsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      11,\n      f,\n      proto.context.manager.Log.serializeBinaryToWriter\n    );\n  }\n  f = message.getGasused();\n  if (f !== 0) {\n    writer.writeUint64(\n      12,\n      f\n    );\n  }\n  f = message.getCumulativegasused();\n  if (f !== 0) {\n    writer.writeUint64(\n      13,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string txHash = 1;\n * @return {string}\n */\nproto.context.manager.Receipt.prototype.getTxhash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.context.manager.Receipt.prototype.setTxhash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string blockHash = 2;\n * @return {string}\n */\nproto.context.manager.Receipt.prototype.getBlockhash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.context.manager.Receipt.prototype.setBlockhash = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 blockNumber = 3;\n * @return {number}\n */\nproto.context.manager.Receipt.prototype.getBlocknumber = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.context.manager.Receipt.prototype.setBlocknumber = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint64 TxIndex = 4;\n * @return {number}\n */\nproto.context.manager.Receipt.prototype.getTxindex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.context.manager.Receipt.prototype.setTxindex = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string contractAddress = 6;\n * @return {string}\n */\nproto.context.manager.Receipt.prototype.getContractaddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.context.manager.Receipt.prototype.setContractaddress = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string postState = 7;\n * @return {string}\n */\nproto.context.manager.Receipt.prototype.getPoststate = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/** @param {string} value */\nproto.context.manager.Receipt.prototype.setPoststate = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional uint64 status = 8;\n * @return {number}\n */\nproto.context.manager.Receipt.prototype.getStatus = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.context.manager.Receipt.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string bloom = 10;\n * @return {string}\n */\nproto.context.manager.Receipt.prototype.getBloom = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/** @param {string} value */\nproto.context.manager.Receipt.prototype.setBloom = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * repeated Log logs = 11;\n * If you change this array by adding, removing or replacing elements, or if you\n * replace the array itself, then you must call the setter to update it.\n * @return {!Array.<!proto.context.manager.Log>}\n */\nproto.context.manager.Receipt.prototype.getLogsList = function() {\n  return /** @type{!Array.<!proto.context.manager.Log>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.context.manager.Log, 11));\n};\n\n\n/** @param {!Array.<!proto.context.manager.Log>} value */\nproto.context.manager.Receipt.prototype.setLogsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 11, value);\n};\n\n\n/**\n * @param {!proto.context.manager.Log=} opt_value\n * @param {number=} opt_index\n * @return {!proto.context.manager.Log}\n */\nproto.context.manager.Receipt.prototype.addLogs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.context.manager.Log, opt_index);\n};\n\n\nproto.context.manager.Receipt.prototype.clearLogsList = function() {\n  this.setLogsList([]);\n};\n\n\n/**\n * optional uint64 gasUsed = 12;\n * @return {number}\n */\nproto.context.manager.Receipt.prototype.getGasused = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {number} value */\nproto.context.manager.Receipt.prototype.setGasused = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional uint64 cumulativeGasUsed = 13;\n * @return {number}\n */\nproto.context.manager.Receipt.prototype.getCumulativegasused = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));\n};\n\n\n/** @param {number} value */\nproto.context.manager.Receipt.prototype.setCumulativegasused = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\ngoog.object.extend(exports, proto.context.manager);\n","module.exports = require(\"google-protobuf\");","module.exports = require(\"events\");","module.exports = require(\"uuid/v4\");","module.exports = require(\"web3-utils\");","import EventEmitter from 'events'\nimport trace_pb from '../protobuf/trace/trace_pb'\nimport kafka from 'kafka-node'\n\nclass Consumer {\n\n    constructor(consumer) {\n        this.consumer = consumer\n        this.emitter = new EventEmitter()\n    }\n\n    unmarshal = data => {\n        const trace = trace_pb.Trace.deserializeBinary(data)\n        return trace.toObject()\n    }\n\n    consume = () => {\n        this.consumer.on('message', msg => {\n            this.emitter.emit('message', this.unmarshal(msg.value));\n        });\n        \n        this.consumer.on('error', error => {\n            this.emitter.emit('error', error)\n        });\n        \n        this.consumer.on('offsetOutOfRange', error => {\n            this.emitter.emit('offsetOutOfRange', error)\n        });\n\n        return this.emitter\n    }\n}\n\nexport class CoreStackConsummer extends Consumer {\n    constructor(client, topic, latestOffset, options) {\n        const consumer = new kafka.Consumer(\n            client,\n            [\n                { topic: topic, offset: latestOffset },\n            ],\n            {\n                encoding: 'buffer',\n                fromOffset: true,\n                ...options\n            }\n        )\n        super(consumer)\n        this.topic = topic\n    }\n}\n\nexport class CoreStackConsummerGroup extends Consumer {\n    constructor(hostname, topic, options) {\n        const consumer = new kafka.ConsumerGroup(\n            {\n                kafkaHost: hostname,\n                encoding: 'buffer',\n                ...options\n            }\n            , topic\n        )\n        super(consumer)\n    }\n}","import trace_pb from '../protobuf/trace/trace_pb'\nimport ethereum_pb from '../protobuf/ethereum/ethereum_pb'\nimport kafka from 'kafka-node'\nimport uuidv4 from 'uuid/v4'\nimport * as Utils from 'web3-utils';\n\nexport class CoreStackProducer {\n    constructor(client, topic, options) {\n        this.producer = new kafka.Producer(client, options)\n        this.topic = topic\n    }\n\n    marshallChainId = (trace, value) => {\n        const chain = new trace_pb.Chain()\n        chain.setId(Utils.toHex(value))\n        trace.setChain(chain)\n    }\n\n    marshallFrom = (trace, value) => {\n        const sender = new trace_pb.Account()\n        sender.setAddress(value)\n        trace.setSender(sender)\n    }\n\n    marshallTo = (trace, value) => {\n        const transaction = new ethereum_pb.Transaction()\n        const txData = new ethereum_pb.TxData()\n        txData.setTo(value)\n        transaction.setTxdata(txData)\n        trace.setTransaction(transaction)\n    }\n\n    marshallCall = (trace, value) => {\n        const call = new trace_pb.Call()\n\n        if (value['method'] && value['contract']) {\n            call.setMethodid(value['method'] + '@' + value['contract'])\n        }\n        if (value['args']) {\n            call.setArgsList(value['args'])\n        }\n\n        trace.setCall(call)\n    }\n\n    marshall = (msg, id) => {\n        const trace = new trace_pb.Trace();\n\n        Object.entries(msg).forEach(([key, value]) => {\n            switch(key) {\n                case 'chainId':\n                    this.marshallChainId(trace, value)\n                    break;\n                case 'from':\n                    this.marshallFrom(trace, value)\n                    break;\n                case 'to':\n                    this.marshallTo(trace, value)\n                    break;\n                case 'call':\n                    this.marshallCall(trace, value)\n                    break;\n            }\n        })\n\n        const metadata = new trace_pb.Metadata()\n        metadata.setId(id)\n        trace.setMetadata(metadata)\n\n        return Buffer.from(trace.serializeBinary())\n    }\n\n    send = (msg, kafkaOptions) => new Promise((resolve, reject) => {\n        let id\n        if(msg['metadata']) {\n            id = msg['metadata'].id\n        } else {\n            id = uuidv4()\n        }\n        \n        const payloads = [\n            { topic: this.topic, key: msg['chainId'] + '-' + msg['from'], ...kafkaOptions, messages: this.marshall(msg, id) },\n        ];\n\n        this.producer.send(payloads, (err, data) => {\n            if (err) {\n                reject(err)\n            } else {\n                resolve({offset: data[this.topic], id})\n            }     \n        })\n    })\n    \n}\n","import kafka from 'kafka-node'\nimport { CoreStackConsummer, CoreStackConsummerGroup } from './consumer'\nimport { CoreStackProducer } from './producer'\n\nclass CoreStack {\n    constructor(hostname, options) {\n        this.hostname = hostname\n        this.client = new kafka.KafkaClient({kafkaHost: hostname, ...options})\n    }\n\n    producer = (topic, options) => new Promise((resolve, reject) => {\n        const CSProducer = new CoreStackProducer(this.client, topic, options)\n        if (CSProducer.producer.ready) {\n            resolve(CSProducer)\n        } else {\n            CSProducer.producer.on('ready', () => {\n                resolve(CSProducer)\n            })\n            CSProducer.producer.on('error', err => {\n                reject(err)\n            })\n        }\n    })\n\n    getLatestOffset = topic => new Promise((resolve, reject) => {\n        const offset = new kafka.Offset(this.client)\n        offset.fetchLatestOffsets([topic], (err, offsets) => {\n            if(err) {\n                reject(err)\n            } else {\n                resolve(offsets[topic][0])\n            }\n        })\n    })\n\n    consumer = async (topic, options) => new Promise(async (resolve, reject) => {\n        const latestOffset = await this.getLatestOffset(topic)\n        const CSConsumer = new CoreStackConsummer(this.client, topic, latestOffset, options)\n        if (CSConsumer.consumer.ready) {\n            resolve(CSConsumer)\n        } else {\n            CSConsumer.consumer.on('ready', () => {\n                resolve(CSConsumer)\n            })\n            CSConsumer.consumer.on('error', err => {\n                reject(err)\n            })\n        }\n    })\n\n    consumerGroup = (topic, options) => new Promise(async (resolve, reject) => {\n        const CSConsumerGroup =  new CoreStackConsummerGroup(this.hostname, topic, options)\n        if (CSConsumerGroup.consumer.ready) {\n            resolve(CSConsumerGroup)\n        } else {\n            resolve(CSConsumerGroup)\n            CSConsumerGroup.consumer.on('connect', () => {\n                resolve(CSConsumerGroup)\n            })\n            CSConsumerGroup.consumer.on('error', err => {\n                reject(err)\n            })\n        }\n    })\n}\n\nexport default CoreStack"],"sourceRoot":""}